#!/usr/bin/env python -u
import argparse
from fabric.colors import yellow
from stevedore import driver, extension
from calyptos.rolebuilder import RoleBuilder
import os
import shutil

dot_dir = os.path.expanduser('~/.calyptos')
default_cfgfile = os.path.join(dot_dir + "/" + "config.yml")

def locate_cfgfile():
    if not os.path.isfile(default_cfgfile):
        if not os.path.exists(dot_dir):
            try:
                os.makedirs(dot_dir)
            except OSError as e:
                print('Error: cannot create directory ~/.calyptos: %s' % e)
        try:
            shutil.copy('/usr/share/calyptos/etc/config.yml', default_cfgfile)
        except shutil.Error as e:
            print('Error: %s' % e)
        except IOError as e:
            print('Error: %s' % e.strerror)

if __name__ == '__main__':
    locate_cfgfile()
    parser = argparse.ArgumentParser()
    default_repo = 'https://github.com/eucalyptus/eucalyptus-cookbook'
    parser.add_argument('operation', choices=['validate',
                                              'prepare',
                                              'bootstrap',
                                              'provision',
                                              'debug',
                                              'uninstall'])
    parser.add_argument('-c', '--config', default=default_cfgfile)
    parser.add_argument('-e', '--environment', default='etc/environment.yml')
    parser.add_argument('-p', '--password', default='foobar')
    parser.add_argument('-b', '--branch', default='euca-4.2')
    parser.add_argument('--cookbook-repo',
                        default=default_repo)
    parser.add_argument('-d', '--driver', default="chef")
    parser.add_argument('--debug', action='store_true', default=False)
    args = parser.parse_args()

    component_deployer = RoleBuilder(args.environment)
    if args.operation == 'validate':
        mgr = extension.ExtensionManager(
            namespace='calyptos.validator',
            invoke_args=(component_deployer,),
            invoke_on_load=True,
            propagate_map_exceptions=True
        )
        results = mgr.map_method(args.operation)
    elif args.operation == 'debug':
        mgr = extension.ExtensionManager(
            namespace='calyptos.debugger',
            invoke_args=(component_deployer,),
            invoke_on_load=True,
            propagate_map_exceptions=False
        )
        results = mgr.map_method(args.operation)
        total_failures = 0
        total_passed = 0
        for passed, failed in results:
            total_passed += passed
            total_failures += failed
        print yellow('Total passed: ' + str(total_passed))
        print yellow('Total failed: ' + str(total_failures))
        exit(total_failures)
    else:
        mgr = driver.DriverManager(
            namespace='calyptos.deployer',
            name=args.driver,
            invoke_on_load=True,
            invoke_args=(args.password,
                         args.environment,
                         args.config,
                         args.debug,
                         args.branch),
        )
        function = getattr(mgr.driver, args.operation)
        function()
